services:
  postgres:
    image: postgres:16-alpine
    container_name: chat_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chat_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d chat_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  ollama:
    image: ollama/ollama:latest
    container_name: chat_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "ollama list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  backend:
    build: ./backend
    container_name: chat_backend
    volumes:
      - ./backend:/app
      - /app/__pycache__
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: chat_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      OLLAMA_BASE_URL: http://ollama:11434
      OLLAMA_MODEL: llama3.2
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: chat_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:
  ollama_data:

networks:
  app-network:
    driver: bridge